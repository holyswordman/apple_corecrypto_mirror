# Copyright (c) 2015,2018 Apple Inc. All rights reserved.
#
# corecrypto Internal Use License Agreement
#
# IMPORTANT:  This Apple corecrypto software is supplied to you by Apple Inc. ("Apple")
# in consideration of your agreement to the following terms, and your download or use
# of this Apple software constitutes acceptance of these terms.  If you do not agree
# with these terms, please do not download or use this Apple software.
#
# 1.    As used in this Agreement, the term "Apple Software" collectively means and
# includes all of the Apple corecrypto materials provided by Apple here, including
# but not limited to the Apple corecrypto software, frameworks, libraries, documentation
# and other Apple-created materials. In consideration of your agreement to abide by the
# following terms, conditioned upon your compliance with these terms and subject to
# these terms, Apple grants you, for a period of ninety (90) days from the date you
# download the Apple Software, a limited, non-exclusive, non-sublicensable license
# under Apple’s copyrights in the Apple Software to make a reasonable number of copies
# of, compile, and run the Apple Software internally within your organization only on
# devices and computers you own or control, for the sole purpose of verifying the
# security characteristics and correct functioning of the Apple Software; provided
# that you must retain this notice and the following text and disclaimers in all
# copies of the Apple Software that you make. You may not, directly or indirectly,
# redistribute the Apple Software or any portions thereof. The Apple Software is only
# licensed and intended for use as expressly stated above and may not be used for other
# purposes or in other contexts without Apple's prior written permission.  Except as
# expressly stated in this notice, no other rights or licenses, express or implied, are
# granted by Apple herein.
#
# 2.    The Apple Software is provided by Apple on an "AS IS" basis.  APPLE MAKES NO
# WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE IMPLIED WARRANTIES
# OF NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, REGARDING
# THE APPLE SOFTWARE OR ITS USE AND OPERATION ALONE OR IN COMBINATION WITH YOUR PRODUCTS,
# SYSTEMS, OR SERVICES. APPLE DOES NOT WARRANT THAT THE APPLE SOFTWARE WILL MEET YOUR
# REQUIREMENTS, THAT THE OPERATION OF THE APPLE SOFTWARE WILL BE UNINTERRUPTED OR
# ERROR-FREE, THAT DEFECTS IN THE APPLE SOFTWARE WILL BE CORRECTED, OR THAT THE APPLE
# SOFTWARE WILL BE COMPATIBLE WITH FUTURE APPLE PRODUCTS, SOFTWARE OR SERVICES. NO ORAL
# OR WRITTEN INFORMATION OR ADVICE GIVEN BY APPLE OR AN APPLE AUTHORIZED REPRESENTATIVE
# WILL CREATE A WARRANTY.
#
# 3.    IN NO EVENT SHALL APPLE BE LIABLE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL
# OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) ARISING
# IN ANY WAY OUT OF THE USE, REPRODUCTION, COMPILATION OR OPERATION OF THE APPLE
# SOFTWARE, HOWEVER CAUSED AND WHETHER UNDER THEORY OF CONTRACT, TORT (INCLUDING
# NEGLIGENCE), STRICT LIABILITY OR OTHERWISE, EVEN IF APPLE HAS BEEN ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# 4.    This Agreement is effective until terminated. Your rights under this Agreement will
# terminate automatically without notice from Apple if you fail to comply with any term(s)
# of this Agreement.  Upon termination, you agree to cease all use of the Apple Software
# and destroy all copies, full or partial, of the Apple Software. This Agreement will be
# governed and construed in accordance with the laws of the State of California, without
# regard to its choice of law rules.
#
# You may report security issues about Apple products to product-security@apple.com,
# as described here:  https://www.apple.com/support/security/.  Non-security bugs and
# enhancement requests can be made via https://bugreport.apple.com as described
# here: https://developer.apple.com/bug-reporting/
#
# EA1350
# 10/5/15

BUILD    := build.linux
CC       := clang

INCLUDES := -Wall \
	    -Icc \
	    -Iccmode \
	    -Iccaes \
	    -Iccn \
	    -Iccansikdf \
	    -Iccdigest \
	    -Iccblowfish \
	    -Icccast \
	    -Icccmac \
	    -Iccder \
	    -Iccasn1 \
	    -Iccdes \
	    -Iccdh \
	    -Iccrng \
	    -Icczp \
	    -Iccdrbg \
	    -Iccsha1 \
	    -Iccsha2 \
	    -Icchmac \
	    -Iccec \
	    -Iccec25519 \
	    -Iccecies \
	    -Iccwrap \
	    -Icchkdf \
	    -Iccmd2 \
	    -Iccmd4 \
	    -Iccmd5 \
	    -Iccnistkdf \
	    -Iccpad \
	    -Iccpbkdf2 \
	    -Iccrc2 \
	    -Iccrc4 \
	    -Iccripemd \
	    -Iccrsa \
	    -Iccsrp \
	    -Iccz \
	    -Icc/corecrypto \
	    -Iccmode/corecrypto \
	    -Ilinux/include \

CCTEST_INCLUDES := -isystem . -Iccmode/crypto_test -Iccec25519 -Icorecrypto_test/lib $(INCLUDES)
CCTEST_CFLAGS   := -fPIC -fblocks -fmessage-length=0 -fdiagnostics-show-note-include-stack -fmacro-backtrace-limit=0 -std=gnu99 -Wno-trigraphs -fpascal-strings -O0 -Wmissing-field-initializers -Wmissing-prototypes -Wmissing-braces -Wparentheses -Wswitch -Wunused-function -Wunused-label -Wunused-parameter -Wunused-variable -Wunused-value -Wempty-body -Wuninitialized -Wno-unknown-pragmas -Wshadow -Wfour-char-constants -Wno-conversion -Wconstant-conversion -Wno-int-conversion -Wno-bool-conversion -Wno-enum-conversion -Wsign-compare -Wshorten-64-to-32 -Wpointer-sign -Wnewline-eof "-D__unused=__attribute__((unused))" -DNDEBUG -fasm-blocks -fstrict-aliasing -Wdeprecated-declarations -g -Wno-sign-conversion -Wno-error=\#warnings -MMD -MT dependencies -isystem ${PWD}/include_linux $(CCTEST_INCLUDES) 

CFLAGS   := -fPIC -fblocks -fmessage-length=0 -fdiagnostics-show-note-include-stack -fmacro-backtrace-limit=0 -std=gnu99 -Wno-trigraphs -fpascal-strings -O0 -Wmissing-field-initializers -Wmissing-prototypes -Wmissing-braces -Wparentheses -Wswitch -Wunused-function -Wunused-label -Wunused-parameter -Wunused-variable -Wunused-value -Wempty-body -Wuninitialized -Wno-unknown-pragmas -Wshadow -Wfour-char-constants -Wno-conversion -Wconstant-conversion -Wno-int-conversion -Wno-bool-conversion -Wno-enum-conversion -Wsign-compare -Wshorten-64-to-32 -Wpointer-sign -Wnewline-eof "-D__unused=__attribute__((unused))" -DNDEBUG -fasm-blocks -fstrict-aliasing -Wdeprecated-declarations -g -Wno-sign-conversion -Wno-error=\#warnings -MMD -MT dependencies -isystem ${PWD}/include_linux $(INCLUDES)


SUBDIRS := \
	cc/src \
	ccaes/src \
	ccansikdf/src \
	ccasn1 \
	ccblowfish/src \
	cccast/src \
	cccmac/src \
	ccder/src \
	ccdes/src \
	ccdh/src \
	ccdigest/src \
	ccdrbg/src \
	ccec/src \
	ccec25519/src \
	ccecies/src \
	cchkdf/src \
	cchmac/src \
	ccmd2/src \
	ccmd4/src \
	ccmd5/src \
	ccmode/src \
	ccn/src \
	ccnistkdf/src \
	ccpad/src \
	ccpbkdf2/src \
	ccrc2/src \
	ccrc4/src \
	ccripemd/src \
	ccrng/src \
	ccrsa/src \
	ccsha1/src \
	ccsha2/src \
	ccsrp/src \
	ccwrap/src \
	ccz/src \
	cczp/src

C_SRCS   := $(filter-out %curve25519_make_key_pair.c, $(filter-out %donna-c64.c, $(filter-out %_test.c, $(foreach subdir,$(SUBDIRS),$(shell find $(subdir) -name \*.c)))))
C_OBJS__ := $(C_SRCS:%.c=%.o)
C_OBJS   := $(C_OBJS__:%.o=$(BUILD)/%.o)

CCTEST_SRCS := \
	corecrypto_test/lib/ccconstanttime.c \
	corecrypto_test/lib/testlist.c \
	corecrypto_test/main.c \
	cc/src/cc_debug.c \
	corecrypto_test/lib/ccsymmetric.c \
	corecrypto_test/lib/testbyteBuffer.c \
	corecrypto_test/lib/testenv.c \
	ccperf/src/ccperf_stats.c \
	corecrypto_test/lib/testmore.c \
	ccaes/crypto_test/crypto_test_aes_modes.c \
	ccec25519/crypto_test/crypto_test_ed25519.c \
	ccansikdf/crypto_test/crypto_test_ansikdf.c \
	ccrsa/crypto_test/crypto_test_rsa.c \
	corecrypto_test/lib/test_ccn_diag.c \
	corecrypto_test/lib/ccstats.c \
	ccdigest/crypto_test/crypto_test_digest.c \
	corecrypto_test/lib/testccnBuffer.c \
	ccec/crypto_test/crypto_test_ecdsa.c \
	cchkdf/crypto_test/crypto_test_hkdf.c \
	ccmode/crypto_test/crypto_test_modes.c \
	ccrsa/src/ccrsa_test.c \
	ccmode/crypto_test/crypto_test_gcm.c \
	ccecies/crypto_test/crypto_test_ecies.c \
	ccdes/crypto_test/crypto_test_des_modes.c \
	cccmac/crypto_test/crypto_test_cmac.c \
	ccec/crypto_test/crypto_test_ec_import_export.c \
	cccast/crypto_test/crypto_test_cast_modes.c \
	ccpad/crypto_test/crypto_test_pad.c \
	ccrng/crypto_test/crypto_test_rng.c \
	ccrng/src/ccrng_rsafips_test.c \
	ccrng/src/ccrng_ecfips_test.c \
	corecrypto_test/lib/cccycles.c \
	ccblowfish/crypto_test/crypto_test_blowfish_modes.c \
	ccrc2/crypto_test/crypto_test_rc2_modes.c \
	ccnistkdf/crypto_test/crypto_test_nistkdf.c \
	ccrc4/crypto_test/crypto_test_rc4.c \
	cchmac/crypto_test/crypto_test_hmac.c \
	ccpbkdf2/crypto_test/crypto_test_pbkdf2.c \
	ccec25519/crypto_test/crypto_test_curve25519.c \
	ccec/crypto_test/crypto_test_ec.c \
	ccsrp/crypto_test/ccsrptest.c \
	cc/crypto_test/crypto_test_cc.c \
	corecrypto_dylib/crypto_test/crypto_test_dylib.c \
	ccwrap/crypto_test/crypto_test_wrap.c \
	corecrypto_test/lib/ccsymmetric_pad.c 

LDFLAGS := -lm -ldispatch -lBlocksRuntime -lbsd

all: $(BUILD)/libcorecrypto_static.a $(BUILD)/corecrypto_test

$(BUILD)/libcorecrypto_static.a: $(C_OBJS)
	ar cru $@ $?

$(BUILD)/corecrypto_test: $(BUILD)/libcorecrypto_static.a $(CCTEST_SRCS)
	$(CC) -o $@ $(CCTEST_CFLAGS) -Icorecrypto_test/include -Icorecrypto_test -Iccperf $(CCTEST_SRCS) $(BUILD)/libcorecrypto_static.a $(LDFLAGS)

$(C_OBJS): $(BUILD)/%.o: %.c
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) -c -o $@ $<

clean: 
	@rm -rf $(BUILD)

#===---------------------------------------------------------------------===##
#=== Debug helper for printing variables
#===---------------------------------------------------------------------===##
print-%: 
	$(error PRINT: $(value $*) = "$($*)" (from $(origin $*)))

